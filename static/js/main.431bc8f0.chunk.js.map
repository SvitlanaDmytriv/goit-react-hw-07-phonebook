{"version":3,"sources":["component/ContactFilter/ContactFilter.module.css","hooks/useLocalStorage.js","component/ContactForm/ContactForm.js","component/ContactFilter/ContactFilter.js","component/ContactList/ContactList.js","App.js","index.js","component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css"],"names":["module","exports","useLocalStorage","key","defaultValue","id","name","number","useState","JSON","parse","window","localStorage","getItem","state","setstate","useEffect","setItem","stringify","ContactForm","addContact","setName","setNumber","console","log","handleChange","e","target","value","nameInputId","shortid","generate","phoneInputId","className","s","form","onSubmit","preventDefault","label","htmlFor","input","type","pattern","title","required","onChange","btn","ContactFilter","ContactList","contactsList","deleteContact","list","map","listItem","onClick","App","contacts","setContacts","filterValue","setFilterValue","contact","toLocaleLowerCase","includes","alert","newContact","prevContacts","normalizedFilter","toLowerCase","filter","filterContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.431bc8f0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__16dih\"};","import { useState, useEffect } from 'react';\n\nconst useLocalStorage = key => {\n  const defaultValue = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n  const [state, setstate] = useState(\n    () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\n  );\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setstate];\n};\n\nexport default useLocalStorage;\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ addContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  console.log(name, number);\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const nameInputId = shortid.generate();\n  const phoneInputId = shortid.generate();\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={nameInputId}>\n        Name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id={nameInputId}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChange}\n      />\n\n      <label className={s.label} htmlFor={phoneInputId}>\n        Number\n      </label>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        id={phoneInputId}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChange}\n      />\n\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// class ContactForm extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   nameInputId = shortid.generate();\n//   phoneInputId = shortid.generate();\n\n//   handleChange = e => {\n//     const { name, value } = e.target;\n\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.addContact({ ...this.state });\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n//   render() {\n//     const { nameInputId, phoneInputId, handleChange, handleSubmit } = this;\n//     const { name, number } = this.state;\n//     return (\n//       <form className={s.form} onSubmit={handleSubmit}>\n//         <label className={s.label} htmlFor={nameInputId}>\n//           Name\n//         </label>\n//         <input\n//           className={s.input}\n//           type=\"text\"\n//           name=\"name\"\n//           value={name}\n//           id={nameInputId}\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//           required\n//           onChange={handleChange}\n//         />\n\n//         <label className={s.label} htmlFor={phoneInputId}>\n//           Number\n//         </label>\n//         <input\n//           className={s.input}\n//           type=\"tel\"\n//           name=\"number\"\n//           value={number}\n//           id={phoneInputId}\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//           required\n//           onChange={handleChange}\n//         />\n\n//         <button className={s.btn} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\r\nimport s from './ContactFilter.module.css';\r\n\r\nfunction ContactFilter({ value, onChange }) {\r\n  return (\r\n    <label>\r\n      <span className={s.label}>Find contacts by name</span>\r\n      <input type=\"text\" value={value} onChange={onChange}></input>\r\n    </label>\r\n  );\r\n}\r\n\r\nContactFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default ContactFilter;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ contactsList, deleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contactsList.map(({ name, number, id }) => (\r\n        <li key={id} className={s.listItem}>\r\n          <p>\r\n            {name} : {number}\r\n          </p>\r\n\r\n          <button type=\"submit\" onClick={() => deleteContact(id)}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.array,\r\n  deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\n\nimport { useState } from 'react';\nimport shortid from 'shortid';\n\nimport useLocalStorage from './hooks/useLocalStorage';\n\nimport ContactForm from './component/ContactForm/ContactForm';\nimport ContactFilter from './component/ContactFilter/ContactFilter';\nimport ContactList from './component/ContactList/ContactList';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage();\n  const [filterValue, setFilterValue] = useState('');\n\n  const addContact = ({ name, number }) => {\n    const contactСomparison = contacts\n      .map(contact => contact.name.toLocaleLowerCase())\n      .includes(name.toLocaleLowerCase());\n\n    if (contactСomparison) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const newContact = { id: shortid.generate(), name, number };\n      setContacts(prevContacts => [...prevContacts, newContact]);\n    }\n  };\n\n  const deleteContact = id => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== id),\n    );\n  };\n\n  const сhangeFilter = e => {\n    const { value } = e.target;\n    setFilterValue(value);\n    console.log(filterValue);\n  };\n\n  const filterContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    const visibleContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return visibleContacts;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n      <h2>Contacts</h2>\n      <ContactFilter value={filterValue} onChange={сhangeFilter} />\n      <ContactList\n        contactsList={filterContacts()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//       { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//       { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//       { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//     ],\n//     filterValue: '',\n//   };\n\n//   componentDidUpdate(prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   componentDidMount() {\n//     const parseContacts = JSON.parse(localStorage.getItem('contacts'));\n//     if (parseContacts) {\n//       this.setState({ contacts: parseContacts });\n//     }\n//   }\n\n// addContact = data => {\n//   const contactСomparison = this.state.contacts\n//     .map(contact => contact.name.toLocaleLowerCase())\n//     .includes(data.name.toLocaleLowerCase());\n\n//   if (contactСomparison) {\n//     alert(`${data.name} is already in contacts`);\n//   } else {\n//     const newContact = { ...data, id: shortid.generate() };\n//     this.setState(prevState => ({\n//       contacts: [...prevState.contacts, newContact],\n//     }));\n//   }\n// };\n\n// deleteContact = id => {\n//   this.setState(prevState => ({\n//     contacts: prevState.contacts.filter(contact => contact.id !== id),\n//   }));\n// };\n\n//   сhangeFilter = e => {\n//     const { value } = e.target;\n//     this.setState({ filterValue: value });\n//   };\n\n// filterContacts = () => {\n//   const { filterValue, contacts } = this.state;\n//   const normalizedFilter = filterValue.toLowerCase();\n//   const visibleContacts = contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n//   return visibleContacts;\n// };\n\n//   render() {\n//     const { addContact, сhangeFilter, deleteContact } = this;\n//     const { filterValue } = this.state;\n//     const visibleFilter = this.filterContacts();\n//     return (\n//       <div className=\"container\">\n//         <h1>Phonebook</h1>\n//         <ContactForm addContact={addContact} />\n//         <h2>Contacts</h2>\n//         <ContactFilter value={filterValue} onChange={сhangeFilter} />\n//         <ContactList\n//           contactsList={visibleFilter}\n//           deleteContact={deleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1eETb\",\"label\":\"ContactForm_label__1sL61\",\"input\":\"ContactForm_input__2jNsY\",\"btn\":\"ContactForm_btn__19U24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__xEA92\",\"listItem\":\"ContactList_listItem__1T7X2\"};"],"sourceRoot":""}